# AUTOGENERATED! DO NOT EDIT! File to edit: 00_basics.ipynb (unless otherwise specified).

__all__ = ['get_device', 'settings_template', 'read_settings', 'DEVICE', 'settings', 'DATA_STORE', 'LOG_STORE',
           'MODEL_STORE', 'EXPERIMENT_STORE', 'PATH_1K', 'PATH_10K', 'PATH_20K', 'PATH_100K', 'FILENAMES',
           'SYNTHEA_DATAGEN_DATES', 'CONDITIONS', 'LOG_NUMERICALIZE_EXCEP']

# Cell
from fastai.imports import *
from addict import Dict
from datetime import date
from collections import OrderedDict

# Cell
def get_device():
    '''Checks to see if GPU is available and sets device to GPU or CPU'''
    use_cuda = torch.cuda.is_available()
    if use_cuda:
        assert torch.backends.cudnn.enabled == True
        torch.backends.cudnn.benchmark = True #Enable cuDNN auto-tuner - perf benefit for convs
        device = torch.device("cuda")
    else:
        device = torch.device("cpu")
    return device

# Cell
def settings_template():
    '''Create initial settings for library'''
    template = {
        'STORES' :
        {
            'DATA_STORE'       : f'{Path.home()}/.lemonpie/datasets',
            'LOG_STORE'        : f'{Path.home()}/.lemonpie/logs',
            'MODEL_STORE'      : f'{Path.home()}/.lemonpie/models',
            'EXPERIMENT_STORE' : f'{Path.home()}/.lemonpie/experiments'
        },
        'FILENAMES' : ['patients', 'observations', 'allergies', 'careplans', 'medications', 'imaging_studies', 'procedures', 'conditions', 'immunizations'],

        'SYNTHEA_DATAGEN_DATES' :
        {
            '1K'  : date.today().strftime('%m-%d-%Y'),
            '10K' : date.today().strftime('%m-%d-%Y'),
            '20K' : date.today().strftime('%m-%d-%Y'),
            '100K': date.today().strftime('%m-%d-%Y'),
            '250K': date.today().strftime('%m-%d-%Y')
        },
        'CONDITIONS':
        {
            'diabetes': '44054006',
            'stroke': '230690007',
            'alzheimers': '26929004',
            'coronary_heart': '53741008',
            'lung_cancer': '254637007',
            'breast_cancer': '254837009',
            'rheumatoid_arthritis': '69896004',
            'epilepsy': '84757009'
        },
        'LOG_NUMERICALIZE_EXCEP': True
    }

    return template

# Cell
def read_settings():
    '''Read settings file at "~/.lemonpie/settings.yaml", if doesnt exist, create it from template'''
    settings_dir = f'{Path.home()}/.lemonpie'
    settings_file = Path(f'{settings_dir}/settings.yaml')

    if not settings_file.exists():
        print('No settings file found, so creating from template ..')
        settings = Dict(settings_template())
        Path.mkdir(Path(settings_dir), exist_ok=True)
        with open(settings_file, 'w') as s:
            yaml.dump(settings.to_dict(), s, sort_keys=False, allow_unicode=True)
    else:
        with open(settings_file, 'r') as s:
            settings = Dict(yaml.full_load(s))

    return settings

# Cell
DEVICE = get_device()
settings = read_settings()

DATA_STORE         = settings.STORES.DATA_STORE
LOG_STORE          = settings.STORES.LOG_STORE
MODEL_STORE        = settings.STORES.MODEL_STORE
EXPERIMENT_STORE   = settings.STORES.EXPERIMENT_STORE

PATH_1K   = f'{DATA_STORE}/synthea/1K'
PATH_10K  = f'{DATA_STORE}/synthea/10K'
PATH_20K  = f'{DATA_STORE}/synthea/20K'
PATH_100K = f'{DATA_STORE}/synthea/100K'

FILENAMES = settings.FILENAMES

SYNTHEA_DATAGEN_DATES = settings.SYNTHEA_DATAGEN_DATES

CONDITIONS = settings.CONDITIONS

LOG_NUMERICALIZE_EXCEP = settings.LOG_NUMERICALIZE_EXCEP